From 514b2d1787bf2bd1d4b6a0c8ee0013ae32effaf6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andrius=20=C5=A0tikonas?= <andrius@stikonas.eu>
Date: Thu, 12 Apr 2018 15:16:42 +0300
Subject: Remove deprecated attribute for now. Not available on current Neon.


diff --git a/src/core/partition.h b/src/core/partition.h
index 63f604d..c675c10 100644
--- a/src/core/partition.h
+++ b/src/core/partition.h
@@ -80,10 +80,10 @@ public:
         New,       /**< from a NewOperation */
         Copy,      /**< from a CopyOperation */
         Restore,   /**< from a RestoreOperation */
-        StateNone __attribute__((deprecated("Use Partition::State::None"))) = None,
-        StateNew __attribute__((deprecated("Use Partition::State::New"))) = New,
-        StateCopy __attribute__((deprecated("Use Partition::State::Copy"))) = Copy,
-        StateRestore __attribute__((deprecated("Use Partition::State::Restore"))) = Restore
+        StateNone = None,
+        StateNew = New,
+        StateCopy = Copy,
+        StateRestore = Restore
     };
 
     Partition(PartitionNode* parent, const Device& device, const PartitionRole& role, FileSystem* fs, qint64 sectorStart, qint64 sectorEnd, QString partitionPath, PartitionTable::Flags availableFlags = PartitionTable::FlagNone, const QString& mountPoint = QString(), bool mounted = false, PartitionTable::Flags activeFlags = PartitionTable::FlagNone, State state = State::None);
-- 
2.16.2


From cff2110c47897d98316e68231eb55fe78f3c547b Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Fri, 11 May 2018 17:49:10 +0300
Subject: Disable BLKPBSZGET


diff --git a/src/core/diskdevice.cpp b/src/core/diskdevice.cpp
index 38c8175..481c3cf 100644
--- a/src/core/diskdevice.cpp
+++ b/src/core/diskdevice.cpp
@@ -37,7 +37,7 @@
 #endif
 
 #if !defined(BLKPBSZGET)
-#define BLKPBSZGET _IO(0x12,123)/* get block physical sector size */
+//#define BLKPBSZGET _IO(0x12,123)/* get block physical sector size */
 #endif
 
 #define d_ptr std::static_pointer_cast<DiskDevicePrivate>(d)
-- 
2.16.2


From a105024ee4f7fa38a992bf8d324e8a62cfe6c46d Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Fri, 11 May 2018 19:00:27 +0300
Subject: Fix headers search path


diff --git a/CMakeLists.txt b/CMakeLists.txt
index caff811..a29a01f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -89,8 +89,8 @@ include_directories(${Qt5Core_INCLUDE_DIRS} ${UUID_INCLUDE_DIRS} ${BLKID_INCLUDE
 add_subdirectory(src)
 
 # create a Config.cmake and a ConfigVersion.cmake file and install them
-set(INCLUDE_INSTALL_DIR "include/kpmcore/")
-set(CMAKECONFIG_INSTALL_DIR "${CMAKECONFIG_INSTALL_PREFIX}/KPMcore")
+set(INCLUDE_INSTALL_DIR  "${CMAKE_INSTALL_INCLUDEDIR}/kpmcore" )
+set(CMAKECONFIG_INSTALL_DIR "${CMAKECONFIG_INSTALL_PREFIX}/kpmcore")
 
 ecm_configure_package_config_file("${CMAKE_CURRENT_SOURCE_DIR}/KPMcoreConfig.cmake.in"
                               "${CMAKE_CURRENT_BINARY_DIR}/KPMcoreConfig.cmake"
diff --git a/src/util/CMakeLists.txt b/src/util/CMakeLists.txt
index 6e3abb2..a149448 100644
--- a/src/util/CMakeLists.txt
+++ b/src/util/CMakeLists.txt
@@ -32,7 +32,7 @@ target_link_libraries(kpmcore_externalcommand
     KF5::I18n
 )
 
-install(TARGETS kpmcore_externalcommand DESTINATION ${KAUTH_HELPER_INSTALL_DIR})
+#install(TARGETS kpmcore_externalcommand DESTINATION ${KAUTH_HELPER_INSTALL_DIR})
 install( FILES util/org.kde.kpmcore.helperinterface.conf DESTINATION ${SYSCONF_INSTALL_DIR}/dbus-1/system.d )
 
 kauth_install_helper_files(kpmcore_externalcommand org.kde.kpmcore.externalcommand root)
-- 
2.16.2


From 53b182ffb0ae5d8e6607bd09effeeee96d35d108 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Sun, 13 May 2018 13:28:40 +0300
Subject: Enable sfdisk backend on Haiku


diff --git a/src/plugins/CMakeLists.txt b/src/plugins/CMakeLists.txt
index 098738c..1df787c 100644
--- a/src/plugins/CMakeLists.txt
+++ b/src/plugins/CMakeLists.txt
@@ -15,7 +15,7 @@
 
 ############################################
 
-if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
+if(${CMAKE_SYSTEM_NAME} MATCHES "(Linux|Haiku)")
     option(PARTMAN_SFDISKBACKEND "Build the sfdisk backend plugin." ON)
 
     if (PARTMAN_SFDISKBACKEND)
-- 
2.16.2


From 07e5a3ac2858e6d38cc698e0f740e7a693e9f302 Mon Sep 17 00:00:00 2001
From: "Friedrich W. H. Kossebau" <kossebau@kde.org>
Date: Mon, 16 Nov 2020 17:14:52 +0100
Subject: [PATCH] Make plugins compatible to latest KPluginFactory code

That one uses std::is_constructible<impl, QObject *, const QVariantList &>
which will fail for our current plugin constructors due to being private
and with only friend class KPluginFactory.
---
 src/plugins/dummy/dummybackend.h   | 4 +---
 src/plugins/sfdisk/sfdiskbackend.h | 4 +---
 2 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/src/plugins/dummy/dummybackend.h b/src/plugins/dummy/dummybackend.h
index 815b020..8d67158 100644
--- a/src/plugins/dummy/dummybackend.h
+++ b/src/plugins/dummy/dummybackend.h
@@ -24,11 +24,9 @@ class QString;
 */
 class DummyBackend : public CoreBackend
 {
-    friend class KPluginFactory;
-
     Q_DISABLE_COPY(DummyBackend)
 
-private:
+public:
     DummyBackend(QObject* parent, const QList<QVariant>& args);
 
 public:
diff --git a/src/plugins/sfdisk/sfdiskbackend.h b/src/plugins/sfdisk/sfdiskbackend.h
index e709f61..0571add 100644
--- a/src/plugins/sfdisk/sfdiskbackend.h
+++ b/src/plugins/sfdisk/sfdiskbackend.h
@@ -27,11 +27,9 @@ class QString;
 */
 class SfdiskBackend : public CoreBackend
 {
-    friend class KPluginFactory;
-
     Q_DISABLE_COPY(SfdiskBackend)
 
-private:
+public:
     SfdiskBackend(QObject* parent, const QList<QVariant>& args);
 
 public:
-- 
GitLab


